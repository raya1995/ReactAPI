[{"C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\index.js":"1","C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\App.js":"2","C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\UserList.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":217,"mtime":1607255203697,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2639,"mtime":1607255196829,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"10if4vm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\index.js",[],["20","21"],"C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\App.js",["22","23"],"C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\ReactRedux\\reactapi\\src\\UserList.js",["24","25","26"],"import React,{ useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nconst UserList=({}) =>{\r\nconst [user,setUser]=useState([]);\r\nuseEffect(()=>{\r\n    const fetchData=async()=>{\r\n      const response= await axios.get('https://jsonplaceholder.typicode.com/users');\r\n      setUser(response.data)\r\n    }\r\n    fetchData()\r\n  },[]);\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \r\n      width: '100%',\r\n      maxWidth: '80ch',\r\n      //backgroundColor: theme.palette.background.paper,\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      backgroundColor: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    \r\n    },\r\n    inline: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      \r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  return (\r\n <>\r\n    <center>\r\n  {user.map(e=>\r\n<List className={classes.root}>\r\n      <ListItem alignItems=\"flex-start\" key={e.id}>\r\n       \r\n        <ListItemText\r\n          primary=  {e.address.street}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n       {\" \"} {e.username}\r\n       {\"  \"}  {e.name} <br/>\r\n       {\" email: \" +e.email}<br />\r\n             \r\n          {\" Phone: \" +e.phone}<br />\r\n          {\" website: \" +e.website}<br />\r\n         \r\n          {\" company: \" +e.company.name}\r\n          {\" \" +e.company.catchPhrase}\r\n          {\" \" +e.company.bs}<br/>\r\n          {\" Address: \" +e.address.street}\r\n              {\" \" +e.address.suite}\r\n              {\" \" +e.address.city}\r\n              {\" \" +e.address.zipcode}\r\n              {\" \" +e.address.geo.lat}\r\n              {\" \" +e.address.geo.lng}<br/>\r\n              </Typography>\r\n         \r\n            \r\n            </React.Fragment>\r\n          \r\n          }\r\n        />\r\n      </ListItem>\r\n      \r\n    </List>)}\r\n    </center>\r\n</>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"36","line":5,"column":12,"nodeType":"37","messageId":"38","endLine":5,"endColumn":14},{"ruleId":"31","severity":1,"message":"39","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":15},{"ruleId":"31","severity":1,"message":"40","line":9,"column":10,"nodeType":"33","messageId":"34","endLine":9,"endColumn":23},{"ruleId":"35","severity":1,"message":"36","line":10,"column":17,"nodeType":"37","messageId":"38","endLine":10,"endColumn":19},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Divider' is defined but never used.","'ThemeProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]